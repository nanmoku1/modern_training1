composer require laravel/sail --dev

windows版PHPのphp.iniにて、zipモジュールが有効となっていない為に一部パッケージのインストールが失敗したので、「extension=zip」のコメントアウトを外して再度上記のコマンドを実行
それによりエラーなくインストールできた。
↓
上記は既にLaravelが入った環境下で実行するコマンドで、真っ新な状態からインストールすると前提が異なり、
artisanコマンドが使えずこれ以上手順を進められない。


Laravelインストールから
一つ上の階層へ移動し、プロジェクトディレクトリ名の末尾に「_」を付けて以下を実行
composer create-project laravel/laravel modern_training1

modern_training1ディレクトリ内のファイルを全て、modern_training1_ディレクトリへ移動し、modern_training1ディレクトリを削除し、modern_training1_ディレクトリ名を「modern_training1」に戻す

php artisan serve
↓
「http://127.0.0.1:8000」で、動作確認



そこから再度sailのインストール
composer require laravel/sail --dev

php artisan sail:install

「0」を押下してmysqlをセッティング

他に必要なコンテナがあれば都度下記のコマンドを実行し、必要コンテナの番号を入力してEnterを押す
php artisan sail:add

wslのコンソールに入り、プロジェクトディレクトリのトップパスに入り以下のコマンドを実行。時間がかかる。特にstep4の処理に時間を要している。Ubuntu側にファイルを置いたほうが良い？
./vendor/bin/sail up

無事コマンドが完了し、起動成功したら以下のURLにアクセスし、正常に動作している事を確認
http://localhost:80/


composer require laravel/breeze --dev

laravel/breeze導入時点では、まだmigreteディレクトリへファイル追加や変更は加えられない

php artisan breeze:install

Blade with Alpine(Which Breeze stack would you like to install?)→Yes(Would you like dark mode support?)→PHPUnit(Wich testing framework do you prefer?)

このタイミングでファイルが大幅に追加される。
処理の中でnpm installとnpm buildの実行も行われている。

主な物
/home/ub_abc/0/tech/modern_training1/routes/auth.php
/home/ub_abc/0/tech/modern_training1/resources/views/auth
/home/ub_abc/0/tech/modern_training1/resources/views/auth/login.blade.php
/home/ub_abc/0/tech/modern_training1/resources/views/auth/register.blade.php
/home/ub_abc/0/tech/modern_training1/resources/views/auth/reset-password.blade.php


以下のファイルが更新される
/home/ub_abc/0/tech/modern_training1/routes/web.php→Route::get('/dashboard～、Route::middleware('auth')～、require __DIR__.'/auth.php'が追加
/home/ub_abc/0/tech/modern_training1/app/Providers/RouteServiceProvider.php
/home/ub_abc/0/tech/modern_training1/resources/css/app.css
/home/ub_abc/0/tech/modern_training1/resources/js/app.js
/home/ub_abc/0/tech/modern_training1/resources/views/welcome.blade.php
/home/ub_abc/0/tech/modern_training1/vite.config.js→更新されるが一部に改行が入るだけでほぼ変化なし
/home/ub_abc/0/tech/modern_training1/package.json→@tailwindcss/forms、tailwindcss、postcss、autoprefixer、alpinejsが追加


一応以下を実行
npm install

./vendor/bin/sail up -d
./vendor/bin/sail artisan migrate


何故かDBがDBクライアントツールから繋がらない

以下の対処でつながった
https://okuyan-techdiary.com/mysql-dbeaver-error/
「Public Key Retrieval is not allowed」エラーが発生する理由
エラーの原因となっているのが、認証方式「caching_sha2_password」です。

MySQL8.0からデフォルトの認証方式として採用されています。

caching_sha2_passwordのデフォルト設定では、TLSによる保護がされていない通信での接続ができません。

このため、ローカル環境のMySQLに接続しようとした際にエラーが発生します。

続いて対処方法について解説します。

「Public Key Retrieval is not allowed」エラーの対処方法
TLSで保護されていない通信で接続する場合は、下記設定を追加する必要があります。

allowPublicKeyRetrieval=true
DBeaverでは下記の手順で変更できます。


rootもsailも問題なく繋がった


http://localhost/でページを開き、Registerを押下して登録ページからIPassを登録すると登録と同時にログインされた事を確認


docker exec -it modern_training1-laravel.test-1 bash


.envファイルを開き、下記を追加します。
SAIL_XDEBUG_MODE=debug

デバッグできる状態に
http://localhost?XDEBUG_SESSION_START=session_name

デバッグ状態を停止に
http://localhost?XDEBUG_SESSION_STOP=session_name

ちなみにphp.iniをいじっていない状態だと、xdebugの標準指定ポートは9003(過去は9000が標準だったが、xdebug3のバージョンからは変わったらしい)


ideヘルパーのインストールと実行をしていなかったので実行
composer require --dev barryvdh/laravel-ide-helper
php artisan ide-helper:generate


コピペ元のテンプレートにて必要な物の為、インストールとjsにて「import * as Popper from '@popperjs/core'」としてインポート及びwindowオブジェクトへ「window.Popper」として代入処理を追加
npm i -D @popperjs/core


php.ini設定を変えたいのでdocekrディレクトリをartisanコマンドで作成
./vendor/bin/sail artisan sail:publish
イメージの再ビルド
./vendor/bin/sail build --no-cache

以後、php.iniを変更して適用する際は、コンテナ起動後に基本、以下のコピーコマンドのみでいい
docker cp ./docker/8.3/php.ini [コンテナID]:/etc/php/8.3/cli/conf.d/99-sail.ini
↓
と思ったがダメっぽい。
何故か毎回フルビルドしないと適用されない。
./vendor/bin/sail php -i　コマンドで確認した限りでは適用されているように見えるが....


php artisan make:migration create_product_categories_table --create=product_categories

php artisan make:migration create_products_table --create=products

php artisan make:migration create_manage_user_table --create=manage_user

php artisan make:migration create_manage_password_reset_tokens_table --create=manage_password_reset_tokens

./vendor/bin/sail artisan migrate:fresh

php artisan make:seeder ProductCategoriesSeeder
./vendor/bin/sail artisan db:seed --class=ProductCategoriesSeeder

php artisan make:seeder ProductsSeeder
./vendor/bin/sail artisan db:seed --class=ProductsSeeder

php artisan make:seeder ProductsSeeder

php artisan make:controller Manage\\ProductsController


